<UserControl x:Class="Reginald.Views.ClipboardManagerPopupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:local="clr-namespace:Reginald.Converters"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             FontFamily="{Binding DMS.Theme.FontFamily}"
             Height="{Binding DMS.Theme.ClipboardHeight}"
             Width="{Binding DMS.Theme.ClipboardWidth}">
    <UserControl.Resources>
        <ResourceDictionary>
            <!--Converters-->
            <local:BorderClipMultiConverter x:Key="BorderClipMultiConverter" />
            <local:BrushToStringConverter x:Key="BrushToStringConverter" />
            <local:ClipboardItemDescriptionConverter x:Key="ClipboardItemDescriptionConverter" />
            <local:IconToImageSourceConverter x:Key="IconToImageSourceConverter" />
            <!--DataTemplates-->
            <DataTemplate x:Key="ListBoxItemDataTemplate">
                <Grid VerticalAlignment="Center"
                      cal:Message.Attach="[MouseMove] = [Item_MouseMove($source, $eventargs)];
                                          [PreviewMouseLeftButtonUp] = [Item_PreviewMouseLeftButtonUp($this, $eventargs)]">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!--Icon-->
                    <Image Grid.Column="0"
                           Height="15"
                           SnapsToDevicePixels="True"
                           Source="{Binding Icon, Converter={StaticResource IconToImageSourceConverter}}"
                           VerticalAlignment="Center"
                           Width="15" />
                    <!--Description-->
                    <TextBlock FontSize="{Binding DataContext.DMS.Theme.ClipboardItemFontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                               Grid.Column="1"
                               Text="{Binding ListBoxDescription}"
                               TextTrimming="CharacterEllipsis"
                               TextWrapping="NoWrap"
                               VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}"
                                                 Value="True">
                                        <Setter Property="Foreground"
                                                Value="{Binding DataContext.DMS.Theme.SelectedDescriptionBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                    </DataTrigger>
                                </Style.Triggers>

                                <Style.Setters>
                                    <Setter Property="Foreground"
                                            Value="{Binding DataContext.DMS.Theme.DescriptionBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                                </Style.Setters>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </DataTemplate>
            <!--ControlTemplates-->
            <ControlTemplate x:Key="ListBoxItemControlTemplate"
                             TargetType="{x:Type ListBoxItem}">
                <Border x:Name="listBoxItemBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Background"
                                TargetName="listBoxItemBorder"
                                Value="{Binding DataContext.DMS.Theme.HighlightBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--Styles-->
            <Style x:Key="BorderStyle"
                   TargetType="{x:Type Border}">
                <Style.Setters>
                    <Setter Property="Background"
                            Value="{Binding DMS.Theme.BackgroundBrush}" />
                </Style.Setters>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DMS.Theme.IsAcrylicEnabled}"
                                 Value="True">
                        <Setter Property="Background"
                                Value="#01000000" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListBoxItemContainerStyle"
                   BasedOn="{StaticResource {x:Type ListBoxItem}}"
                   TargetType="{x:Type ListBoxItem}">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius"
                                Value="2.5" />
                    </Style>
                </Style.Resources>
                <Style.Setters>
                    <Setter Property="Foreground"
                            Value="{Binding DataContext.DMS.Theme.InputBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                    <Setter Property="Height"
                            Value="25" />
                    <Setter Property="Margin"
                            Value="0" />
                    <Setter Property="Padding"
                            Value="0" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="Template"
                            Value="{StaticResource ListBoxItemControlTemplate}" />
                </Style.Setters>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding DataContext.IsMouseOverChanged, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                       Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="IsSelected"
                                    Value="True" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PopupCloseBorderStyle"
                   TargetType="{x:Type Border}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="{Binding DataContext.DMS.Theme.HighlightBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ListBoxStyle"
                   BasedOn="{StaticResource {x:Type ListBox}}"
                   TargetType="{x:Type ListBox}">
                <Style.Resources>
                    <Style TargetType="{x:Type ScrollViewer}">
                        <Setter Property="Template"
                                Value="{StaticResource FloatingScrollViewerControlTemplate}" />
                    </Style>
                    <Style BasedOn="{StaticResource AppleNoHitTestScrollBarStyle}"
                           TargetType="{x:Type ScrollBar}" />
                </Style.Resources>
                <Style.Triggers>
                    <Trigger Property="HasItems"
                             Value="False">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StandardClipboardItemTextBoxStyle"
                   TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding SelectedItem.HexBrush}"
                                       Value="{x:Null}" />
                            <Condition Binding="{Binding SelectedItem.Image}"
                                       Value="{x:Null}" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Visibility"
                                    Value="Visible" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
                <Style.Setters>
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                </Style.Setters>
            </Style>

            <Style x:Key="StackPanelHexStyle"
                   TargetType="{x:Type StackPanel}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedItem.HexBrush}"
                                 Value="{x:Null}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StandardClipboardItemImageStyle"
                   TargetType="{x:Type Image}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedItem.Image}"
                                 Value="{x:Null}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border BorderBrush="{Binding DMS.Theme.BorderBrush}"
            BorderThickness="{Binding DMS.Theme.BorderThickness}"
            CornerRadius="{Binding DMS.Theme.CornerRadius}"
            FocusManager.FocusedElement="{Binding ElementName=textBox}"
            Opacity="{Binding BorderOpacity}"
            Style="{StaticResource BorderStyle}">
        <Border.Clip>
            <MultiBinding Converter="{StaticResource BorderClipMultiConverter}">
                <Binding Path="ActualWidth"
                         RelativeSource="{RelativeSource Self}" />
                <Binding Path="ActualHeight"
                         RelativeSource="{RelativeSource Self}" />
                <Binding Path="CornerRadius"
                         RelativeSource="{RelativeSource Self}" />
            </MultiBinding>
        </Border.Clip>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <!--Top-->
            <Border Background="Transparent"
                    Grid.Row="0"
                    cal:Message.Attach="[PreviewMouseLeftButtonDown] = [Menu_PreviewMouseLeftButtonDown($this, $eventargs)];">
                <DockPanel Margin="{Binding DMS.Theme.ClipboardDockPanelPadding}">
                    <!--Keeps popup bar centered-->
                    <Border DockPanel.Dock="Left"
                            Height="{Binding ActualHeight, ElementName=closeBorder, UpdateSourceTrigger=PropertyChanged}"
                            Width="{Binding ActualWidth, ElementName=closeBorder, UpdateSourceTrigger=PropertyChanged}" />
                    <!--Close-->
                    <Border x:Name="closeBorder"
                            CornerRadius="{Binding DMS.Theme.CornerRadius}"
                            DockPanel.Dock="Right"
                            Height="20"
                            Style="{StaticResource PopupCloseBorderStyle}"
                            Width="20"
                            cal:Message.Attach="[Event MouseLeftButtonDown] = [Action PopupCloseBorder_MouseLeftButtonDown($this, $eventargs)]">
                        <Path Data="M0,0L12,12M12,0L0,12"
                              Height="12"
                              HorizontalAlignment="Center"
                              Stroke="{Binding DMS.Theme.DescriptionBrush}"
                              StrokeThickness="1.5"
                              VerticalAlignment="Center"
                              Width="12" />
                    </Border>
                    <!--Bar-->
                    <Border Background="{Binding DMS.Theme.InactiveBrush}"
                            CornerRadius="1.5"
                            Height="3"
                            HorizontalAlignment="Center"
                            Width="50" />
                </DockPanel>
            </Border>
            <TextBox x:Name="textBox"
                     Background="Transparent"
                     BorderThickness="0"
                     CaretBrush="{Binding DMS.Theme.CaretBrush}"
                     FontSize="{Binding DMS.Theme.ClipboardItemFontSize}"
                     FontWeight="{Binding DMS.Theme.InputFontWeight}"
                     Foreground="{Binding DMS.Theme.InputBrush}"
                     Grid.Row="1"
                     Padding="10 0 0 0"
                     SelectionBrush="{Binding DMS.Theme.SelectionBrush}"
                     SelectionOpacity="{Binding DMS.Theme.SelectionOpacity}"
                     Text="{Binding UserInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     VerticalContentAlignment="Center"
                     cal:Message.Attach="[Loaded] = [UserInput_Loaded($this, $eventargs)];
                                         [LostKeyboardFocus] = [UserInput_LostKeyboardFocus($source, $eventargs)];
                                         [Unloaded] = [UserInput_Unloaded($source, $eventargs)];
                                         [PreviewKeyDown] = [UserInput_PreviewKeyDown($this, $eventargs)];
                                         [PreviewKeyUp] = [UserInput_PreviewKeyUp($this, $eventargs)];
                                         [TextChanged] = [UserInput_TextChanged($this, $eventargs)]" />
            <Grid Grid.Row="2"
                  Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <!--Clipboard items-->
                <ListBox Background="Transparent"
                         BorderThickness="0"
                         Grid.Column="0"
                         Height="Auto"
                         ItemContainerStyle="{StaticResource ListBoxItemContainerStyle}"
                         ItemTemplate="{StaticResource ListBoxItemDataTemplate}"
                         ItemsSource="{Binding Items}"
                         SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         Style="{StaticResource ListBoxStyle}"
                         VirtualizingStackPanel.IsVirtualizing="True"
                         VirtualizingStackPanel.ScrollUnit="Pixel"
                         VirtualizingStackPanel.VirtualizationMode="Recycling"
                         cal:Message.Attach="[Unloaded] = [Items_Unloaded($source, $eventargs)];
                                             [MouseLeave] = [Items_MouseLeave($this, $eventargs)];
                                             [SelectionChanged] = [Items_SelectionChanged($source, $eventargs)]">
                    <ListBox.ContextMenu>
                        <ContextMenu Focusable="False">
                            <MenuItem Focusable="False"
                                      Header="Delete"
                                      Tag="Delete"
                                      cal:Message.Attach="[Click] = [MenuItem_Click($source, $eventargs)]" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>
                <!--Clipboard item viewer-->
                <Border Grid.Column="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="20" />
                        </Grid.RowDefinitions>
                        <!--Standard display for text clipboard items-->
                        <TextBox Background="Transparent"
                                 BorderThickness="0"
                                 Cursor="Arrow"
                                 FontSize="{Binding DMS.Theme.ClipboardDisplayFontSize}"
                                 Foreground="{Binding DMS.Theme.InputBrush}"
                                 Grid.Row="0"
                                 IsReadOnly="True"
                                 Style="{StaticResource StandardClipboardItemTextBoxStyle}"
                                 Text="{Binding SelectedItem.Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ClipboardItemDescriptionConverter}}"
                                 TextWrapping="Wrap"
                                 VerticalContentAlignment="Top"
                                 VerticalScrollBarVisibility="Auto" />
                        <!--Color display for hex values-->
                        <StackPanel Grid.Row="0"
                                    Style="{StaticResource StackPanelHexStyle}">
                            <Border Background="{Binding SelectedItem.HexBrush}"
                                    Height="50"
                                    Width="50" />
                            <TextBox Background="Transparent"
                                     BorderThickness="0"
                                     Cursor="Arrow"
                                     HorizontalAlignment="Center"
                                     IsReadOnly="True"
                                     Text="{Binding SelectedItem.HexBrush, Converter={StaticResource BrushToStringConverter}, ConverterParameter='{}#{0:X2}{1:X2}{2:X2}'}"
                                     TextWrapping="Wrap" />
                        </StackPanel>
                        <!--Display for image clipboard items-->
                        <Image Grid.Row="0"
                               Source="{Binding SelectedItem.Image}"
                               Style="{StaticResource StandardClipboardItemImageStyle}" />
                        <!--Clipboard item info-->
                        <TextBlock FontSize="{Binding DMS.Theme.ClipboardDisplayFontSize}"
                                   Foreground="{Binding DMS.Theme.InactiveBrush}"
                                   Grid.Row="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}Copied on {0:MMM d, yyyy} @ {1:t}">
                                    <Binding Path="DataContext.SelectedItem.DateTime"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                    <Binding Path="DataContext.SelectedItem.DateTime"
                                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Border>
</UserControl>
