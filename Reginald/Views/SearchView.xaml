<hc:Window x:Name="searchWindow"
           x:Class="Reginald.Views.SearchView"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:local="clr-namespace:Reginald.Converters"
           xmlns:cal="http://www.caliburnproject.org"
           xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           mc:Ignorable="d"
           Title="Search"
           Height="65"
           MinHeight="65"
           Width="600"
           FontFamily="{Binding Theme.FontFamily}"
           ResizeMode="NoResize"
           SizeToContent="Height"
           BorderThickness="0"
           WindowStartupLocation="Manual"
           WindowStyle="None"
           Topmost="True"
           ShowInTaskbar="False"
           ApplyBackdropMaterial="{Binding ElementName=searchWindow, Path=DataContext.Theme.IsMicaEnabled, UpdateSourceTrigger=PropertyChanged}"
           ShowNonClientArea="False"
           fw:AcrylicWindow.Enabled="{Binding Theme.IsAcrylicEnabled}"
           fw:AcrylicWindow.TintColor="{Binding Theme.BackgroundColor}"
           fw:AcrylicWindow.TintOpacity="{Binding Theme.TintOpacity}"
           fw:AcrylicWindow.NoiseOpacity="0"
           fw:AcrylicWindow.AcrylicWindowStyle="None"
           cal:Message.Attach="[Event KeyDown] = [Action SearchWindow_KeyDown($this, $eventargs)]">
    <Window.Resources>
        <ResourceDictionary>
            <!-- # Templates-->
            
            <!-- ## ItemTemplate for SearchResults -->
            <DataTemplate x:Key="SearchResultsItemTemplate">
                <Grid Width="570"
                      cal:Message.Attach="[Event MouseMove] = [Action SearchResults_MouseMove($source, $eventargs)]">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- ### Icon -->
                    <Image Source="{Binding Icon}"
                           Grid.Column="0"
                           Width="35"
                           Height="35"
                           Margin="0 0 12.5 0"/>
                    <StackPanel Grid.Column="1"
                                Grid.ColumnSpan="2"
                                VerticalAlignment="Center">
                        
                        <!-- ### Description -->
                        <TextBlock Text="{Binding Description}"
                                   FontSize="{Binding ElementName=searchWindow, Path=DataContext.Theme.DescriptionFontSize}"
                                   FontWeight="{Binding ElementName=searchWindow, Path=DataContext.Theme.DescriptionFontWeight}"
                                   Background="Transparent"
                                   TextTrimming="CharacterEllipsis"
                                   Margin="0"
                                   Padding="0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                                     Value="True">
                                            <Setter Property="Foreground"
                                                    Value="{Binding ElementName=searchWindow, Path=DataContext.Theme.SelectedDescriptionBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Style.Setters>
                                        <Setter Property="Foreground"
                                                Value="{Binding ElementName=searchWindow, Path=DataContext.Theme.DescriptionBrush}"/>
                                    </Style.Setters>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        
                        <!-- ### Caption -->
                        <TextBlock Text="{Binding Caption}"
                                   FontSize="{Binding ElementName=searchWindow, Path=DataContext.Theme.CaptionFontSize}"
                                   FontWeight="{Binding ElementName=searchWindow, Path=DataContext.Theme.CaptionFontWeight}"
                                   Background="Transparent"
                                   Margin="0"
                                   Padding="0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                                     Value="True">
                                            <Setter Property="Foreground"
                                                    Value="{Binding ElementName=searchWindow, Path=DataContext.Theme.SelectedCaptionBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Style.Setters>
                                        <Setter Property="Foreground"
                                                Value="{Binding ElementName=searchWindow, Path=DataContext.Theme.CaptionBrush}"/>
                                    </Style.Setters>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <!-- ## ControlTemplate for SearchResults ListBoxItem-->
            <ControlTemplate x:Key="SearchResultsListBoxItemControlTemplate"
                             TargetType="ListBoxItem">
                <Border x:Name="listBoxItemBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="True">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter TargetName="listBoxItemBorder"
                                Property="Background"
                                Value="{Binding ElementName=searchWindow, Path=DataContext.Theme.HighlightBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            
            <!-- # Styles -->
            
            <!-- ## UserInputTextBox -->
            <Style x:Key="UserInputTextBoxStyle"
                   TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsBrowsingRecentSearches}"
                                 Value="True">
                        <Setter Property="Foreground"
                                Value="{Binding Theme.PlaceholderInputBrush}"/>
                        <Setter Property="CaretBrush"
                                Value="Transparent"/>
                    </DataTrigger>
                </Style.Triggers>
                <Style.Setters>
                    <Setter Property="Foreground"
                            Value="{Binding Theme.InputBrush}"/>
                    <Setter Property="CaretBrush"
                            Value="{Binding Theme.CaretBrush}"/>
                </Style.Setters>
            </Style>
            
            <!-- ## SearchResultsListBox -->
            <Style x:Key="SearchResultsListBoxItemContainerStyle"
                   TargetType="{x:Type ListBoxItem}"
                   BasedOn="{StaticResource {x:Type ListBoxItem}}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=searchWindow, Path=DataContext.IsMouseOverChanged}"
                                       Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}"
                                       Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="IsSelected"
                                    Value="True"/>
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
                <Setter Property="Padding"
                        Value="10 0"/>
                <Setter Property="Height"
                        Value="55"/>
                <Setter Property="Template"
                        Value="{StaticResource SearchResultsListBoxItemControlTemplate}"/>
            </Style>

            <!-- # Converters -->
            <local:BrushToColorConverter x:Key="BrushToColorConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    
    <Border BorderBrush="{Binding Theme.BorderBrush}"
            BorderThickness="{Binding Theme.BorderThickness}"
            CornerRadius="{Binding Theme.CornerRadius}"
            FocusManager.FocusedElement="{Binding ElementName=UserInput}">
        <StackPanel>
            <TextBox x:Name="UserInput"
                     Style="{StaticResource UserInputTextBoxStyle}"
                     FontSize="{Binding Theme.InputFontSize}"
                     FontWeight="{Binding Theme.InputFontWeight}"
                     SelectionBrush="{Binding Theme.SelectionBrush}"
                     SelectionOpacity="{Binding Theme.SelectionOpacity}"
                     Height="{Binding ElementName=searchWindow, Path=MinHeight}"
                     Background="Transparent"
                     BorderThickness="0"
                     Padding="10 0"
                     VerticalContentAlignment="Center"
                     cal:Message.Attach="[Event TextChanged] = [Action UserInput_TextChanged($this, $eventargs)];
                                         [Event PreviewKeyDown] = [Action UserInput_PreviewKeyDown($source, $eventargs)];
                                         [Event PreviewKeyUp] = [Action UserInput_PreviewKeyUp($source, $eventargs)]"/>

            <ListBox ItemTemplate="{StaticResource SearchResultsItemTemplate}"
                     ItemContainerStyle="{StaticResource SearchResultsListBoxItemContainerStyle}"
                     ItemsSource="{Binding SearchResults}"
                     SelectedItem="{Binding SelectedDisplayItem, Mode=TwoWay}"
                     Background="Transparent"
                     MaxHeight="330"
                     BorderThickness="0"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     ScrollViewer.CanContentScroll="False"
                     cal:Message.Attach="[Event PreviewMouseLeftButtonDown] = [Action SearchResults_PreviewMouseLeftButtonDown($source, $eventargs)];
                                         [Event MouseLeave] = [Action SearchResults_MouseLeave($this, $eventargs)];
                                         [Event SelectionChanged] = [Action SearchResults_SelectionChanged($source, $eventargs)]"/>
        </StackPanel>
    </Border>
</hc:Window>