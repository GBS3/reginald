<UserControl x:Class="Reginald.Views.ExpansionsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:controls="clr-namespace:Reginald.Controls"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0"
                    Style="{StaticResource UserControlStackPanelStyle}">
            <!--ToggleButton-->
            <Border Style="{StaticResource CardBorderStyle}">
                <Grid Style="{StaticResource CardControlGridStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Style="{StaticResource ApplicationBrandIconTextBlockStyle}"
                               Text="&#xE897;" />
                    <StackPanel Grid.Column="1"
                                VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource PrimaryHeadingTwoTextBlockStyle}"
                                   Text="Text expansions" />
                        <TextBlock Style="{StaticResource SecondaryParagraphTextBlock}"
                                   Text="Enable text expansions" />
                    </StackPanel>

                    <ToggleButton Grid.Column="3"
                                  IsChecked="{Binding DMS.Settings.AreExpansionsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Style="{StaticResource WindowsToggleButtonStyle}"
                                  cal:Message.Attach="[Click] = [IsEnabled_Click($this, $eventargs)]" />
                </Grid>
            </Border>
            <Border Style="{StaticResource CardBorderStyle}">
                <StackPanel Style="{StaticResource CardActionStackPanelStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0"
                                   Style="{StaticResource ApplicationBrandIconTextBlockStyle}"
                                   Text="&#xE710;" />
                        <StackPanel Grid.Column="1"
                                    VerticalAlignment="Center">
                            <TextBlock Style="{StaticResource PrimaryHeadingTwoTextBlockStyle}"
                                       Text="Create" />
                            <TextBlock Style="{StaticResource SecondaryParagraphTextBlock}"
                                       Text="Add a text expansion" />
                        </StackPanel>
                        <!--Save button-->
                        <StackPanel Grid.Column="3"
                                    VerticalAlignment="Center">
                            <Button Content="Save"
                                    cal:Message.Attach="[Click] = [SaveButton_Click($this, $eventargs)]">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource SecondaryButtonStyle}"
                                           TargetType="{x:Type Button}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Trigger}"
                                                         Value="{x:Null}">
                                                <Setter Property="IsEnabled"
                                                        Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Trigger}"
                                                         Value="">
                                                <Setter Property="IsEnabled"
                                                        Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Replacement}"
                                                         Value="{x:Null}">
                                                <Setter Property="IsEnabled"
                                                        Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Replacement}"
                                                         Value="">
                                                <Setter Property="IsEnabled"
                                                        Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <!--Form-->
                    <StackPanel Style="{StaticResource CardActionBottomStackPanelStyle}">
                        <!--Trigger-->
                        <controls:LabeledTextBox IsRequired="True"
                                                 Label="Trigger"
                                                 Text="{Binding Trigger, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <controls:LabeledTextBox.ToolTip>
                                <ToolTip Content="Triggers are case-sensitive and can include letters, numbers, and symbols" />
                            </controls:LabeledTextBox.ToolTip>
                        </controls:LabeledTextBox>
                        <!--Replacement-->
                        <controls:LabeledTextBox AcceptsReturn="True"
                                                 AcceptsTab="True"
                                                 IsRequired="True"
                                                 Label="Replacement"
                                                 Text="{Binding Replacement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <controls:LabeledTextBox.ToolTip>
                                <ToolTip Content="Replacements can contain newlines and tabs" />
                            </controls:LabeledTextBox.ToolTip>
                        </controls:LabeledTextBox>
                    </StackPanel>
                </StackPanel>
            </Border>
        </StackPanel>
        <!--Expansions-->
        <Border Grid.Row="1"
                Style="{StaticResource CardBorderStyle}">
            <StackPanel Style="{StaticResource CardActionStackPanelStyle}">
                <StackPanel Style="{StaticResource CardActionTopStackPanelStyle}">
                    <TextBlock Style="{StaticResource ApplicationBrandIconTextBlockStyle}"
                               Text="&#xE71D;" />
                    <StackPanel VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource PrimaryHeadingTwoTextBlockStyle}"
                                   Text="Text expansions" />
                        <TextBlock Style="{StaticResource SecondaryParagraphTextBlock}"
                                   Text="A display of your text expansions" />
                    </StackPanel>
                </StackPanel>
                <Grid Style="{StaticResource CardActionBottomGridStyle}">
                    <DataGrid AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="False"
                              GridLinesVisibility="Horizontal"
                              HeadersVisibility="Column"
                              HorizontalGridLinesBrush="{StaticResource QuaternaryBrush}"
                              ItemsSource="{Binding Items}"
                              RowHeight="{x:Static sys:Double.NaN}"
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                              SelectionMode="Single"
                              cal:Message.Attach="[ContextMenuOpening] = [DataGrid_ContextMenuOpening($this, $eventargs)];
                                                  [LostFocus] = [DataGrid_LostFocus($this, $eventargs)]">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete"
                                          Tag="Delete"
                                          cal:Message.Attach="[Click] = [MenuItem_Click($source, $eventargs)]" />
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <!--Trigger-->
                            <DataGridTemplateColumn Header="Trigger"
                                                    Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox FontSize="12"
                                                 Style="{StaticResource PrimaryTextBoxStyle}"
                                                 Text="{Binding Trigger, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                 TextWrapping="Wrap"
                                                 cal:Message.Attach="[GotKeyboardFocus] = [DataGridTemplateColumnTextBox_GotKeyboardFocus($this, $eventargs)]" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <!--Replacement-->
                            <DataGridTemplateColumn Header="Replacement"
                                                    IsReadOnly="False"
                                                    Width="2*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox AcceptsReturn="True"
                                                 AcceptsTab="True"
                                                 FontSize="12"
                                                 Style="{StaticResource PrimaryTextBoxStyle}"
                                                 Text="{Binding Replacement, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                                                 TextWrapping="Wrap"
                                                 cal:Message.Attach="[GotKeyboardFocus] = [DataGridTemplateColumnTextBox_GotKeyboardFocus($this, $eventargs)]" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
